FROM ros:foxy

# Custom
RUN apt update && apt install -y \ 
	build-essential \
	gcc \ 
	make \
	cmake \
	cmake-gui \
	cmake-curses-gui \
	libssl-dev \
	doxygen \
	graphviz
RUN apt install git
WORKDIR /
RUN git clone https://github.com/eclipse/paho.mqtt.c.git && \
	cd paho.mqtt.c && \
	make

RUN cd paho.mqtt.c && \
	git checkout v1.3.8 && \
	cmake -Bbuild -H. -DPAHO_ENABLE_TESTING=OFF -DPAHO_BUILD_STATIC=ON \
    -DPAHO_WITH_SSL=ON -DPAHO_HIGH_PERFORMANCE=ON && \
	cmake --build build/ --target install 
RUN ldconfig

RUN git clone https://github.com/eclipse/paho.mqtt.cpp && \
	cd paho.mqtt.cpp && \
 	cmake -Bbuild -H. -DPAHO_BUILD_STATIC=ON \
    -DPAHO_BUILD_DOCUMENTATION=TRUE -DPAHO_BUILD_SAMPLES=TRUE && \
 	cmake --build build/ --target install
RUN ldconfig

RUN apt install vim -y

RUN apt install -y mosquitto mosquitto-clients
# 
# setup entrypoint
#
COPY ros_entrypoint.sh /ros_entrypoint.sh

RUN sed -i \
    's/ros_env_setup="\/opt\/ros\/$ROS_DISTRO\/setup.bash"/ros_env_setup="${ROS_ROOT}\/install\/setup.bash"/g' \
    /ros_entrypoint.sh && \
    cat /ros_entrypoint.sh

RUN echo 'source ${ROS_ROOT}/install/setup.bash' >> /root/.bashrc
#RUN echo 'source /workspace/dev_ws/install/setup.bash' >> /root/.bashrc
ENV ws=/workspace/dev_ws
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /
